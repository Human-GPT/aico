[build]
  publish = "."
  command = "echo 'Static site deployment - no build needed'"

# Optimierte Headers für Performance und Sicherheit
[[headers]]
  for = "/*"
  [headers.values]
    X-Frame-Options = "DENY"
    X-XSS-Protection = "1; mode=block"
    X-Content-Type-Options = "nosniff"
    Referrer-Policy = "strict-origin-when-cross-origin"
    Permissions-Policy = "camera=(), microphone=(), location=(), payment=()"

[[headers]]
  for = "*.html"
  [headers.values]
    Cache-Control = "public, max-age=300, s-maxage=300"
    Content-Type = "text/html; charset=UTF-8"

[[headers]]
  for = "/context.json"
  [headers.values]
    Cache-Control = "public, max-age=300, s-maxage=300, stale-while-revalidate=60"
    Access-Control-Allow-Origin = "*"
    Access-Control-Allow-Methods = "GET, HEAD, OPTIONS"
    Access-Control-Allow-Headers = "Content-Type, Authorization"
    Content-Type = "application/json; charset=UTF-8"

[[headers]]
  for = "*.css"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "*.js"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

# API Redirects für bessere Zugänglichkeit
[[redirects]]
  from = "/api/context"
  to = "/context.json"
  status = 200
  headers = {Content-Type = "application/json"}

[[redirects]]
  from = "/api/context.json"
  to = "/context.json"
  status = 200

[[redirects]]
  from = "/api/*"
  to = "/context.json"
  status = 200

# Fallback für SPA-ähnliches Verhalten
[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200
  conditions = {Accept = "text/html"}

# Environment-spezifische Einstellungen
[context.production]
  command = "echo 'Production build complete'"
  
[context.deploy-preview]
  command = "echo 'Deploy preview ready'"

[context.branch-deploy]
  command = "echo 'Branch deploy ready'"

# Funktionen für erweiterte API-Features (optional)
[functions]
  directory = "functions"

# Edge Functions (optional für bessere Performance)
[edge_functions]
  directory = "edge-functions"

# Formulare (falls später gebraucht)
[forms]
  settings = {}

# Notifikationen
[notifications]
  email = {
    on_success = "Site deployed successfully!",
    on_failure = "Deployment failed. Check build logs."
  }

# Plugin-Konfiguration
[[plugins]]
  package = "@netlify/plugin-lighthouse"
  
  [plugins.inputs.audits]
    performance = true
    accessibility = true
    best-practices = true
    seo = true
    pwa = false

[[plugins]]
  package = "netlify-plugin-checklinks"
  
  [plugins.inputs]
    entryPoints = [
      "*.html",
    ]
    recursive = true
    pretty = true
    skipPatterns = []
    todoPatterns = []

# Optimierungen
[build.processing]
  skip_processing = false
  
[build.processing.css]
  bundle = true
  minify = true

[build.processing.js]
  bundle = true
  minify = true

[build.processing.html]
  pretty_urls = true

[build.processing.images]
  compress = true 